{
  'parameters_gae' : {
	
	# Model parameters
	'parameters_encoder' : 
	{
		'n_layers'		   : 3,
		'input_channels'   : [1, 64, 64],
		'output_channels'  : [64,64, 64],
		'kernel_size'	   : [(3,3), (3,3), (3,3)],
		'stride'		   : [1, 1, 1],
		'padding'		   : [1, 1, 1],
		'bias'			   : True,
		'activation'	   : nn.Sigmoid(),
		'dropout'		   : True,
		'dropout_value'    : 0.001,
		'batch_norm'	   : True
	},

	'parameters_decoder' : 
	{
		'n_layers'		   : 4,
		'input_channels'   : [65, 64, 64, 64],
		'output_channels'  : [64, 64, 64, 1],
		'kernel_size'	   : [(3,3), (3,3), (3,3), (3,3)],
		'stride'		   : [1, 1, 1, 1],
		'padding'		   : [1, 1, 1, 1],
		'bias'			   : True,
		'activation'	   : nn.Sigmoid(),
		'dropout'		   : True,
		'dropout_value'    : 0.001,
		'batch_norm'	   : True
	},

	'parameters_conv' :
	{
		'in_channels'  : 64, # input_channels_encoder + input_channels_decoder
		'out_channels' : 64,
		'kernel_size'  : (3, 3),
		'stride'	   : 1,
		'padding'	   : (1, 1),
		'activation'   : nn.Sigmoid(),
		'bias'		   : True
  	},

	'frequency_domain': True,
	'parameters_freq'   : {
		'window' 		: 'hann',
		'filter_length' : 1024,
		'hop_length'	: int(8000*5*1e-3),
		'win_length'	: int(8000*10*1e-3),
	}
  },

  'parameters_gen' : 
  {
	'frequency_domain' : True,
	'parameters': {
  	    'n_layers'		   : 3,
		'input_channels'   : [1, 64, 64],
		'output_channels'  : [64,64, 64],
		'kernel_size'	   : [(3, 3), (3, 3), (3, 3)],
		'stride'		   : [1, 1, 1],
		'padding'		   : [1, 1, 1],
		'bias'			   : True,
		'activation'	   : nn.Sigmoid(),
		'dropout'		   : True,
		'dropout_value'    : 0.2,
		'batch_norm'	   : True,
		},
	
	'parameters_freq'  : {
		'window' 		   : 'hann',
		'filter_length'    : 1024,
		'hop_length'	   : int(16000*5*1e-3),
		'win_length'	   : int(16000*10*1e-3),
	}
  },

  'parameters_adv':
  {
	## Define x-vector model parameters
	'model_type'   : 'tdnn',
	'model_class'  : 'TDNNetwork',
	'attentive'    : True,
	'input_dim'    : 30,
	'output_dim'   : 250, # Number of speakers
	'node_num'	   : [512,512,512,512,1500,3000,512,512],
	'context'      : [[-2,2],[-2,0,2],[-3,0,3],[0],[0]],
	'full_context' : [True, False, False, True, True],
 },

  ## Optimization parameters
  'learning_rate'   : 0.001,
  'weight_decay'    : 0.00001,
  'optimization_fn' : torch.optim.Adam,

  # Device specific parameters
  'device'		: "cuda:0",
  'num_workers' : 1,

  # Data paths
  'root' 	  : "/ffs/tmp/fsept/FoolHD/samples/original/",

  'load_fn' : 'voxceleb',

  # Save paths
  'save_path_gae'			   : "saved_models/gae_model.pth",
  'save_intermediate_path_gae' : "saved_models/gae_model_intermediate.pth",

  # Pre-trained model_path
  'model_adv_path'    : "external/pretrained_models/tdnn_state_dict.pth", 
  'model_gae_path'    : "saved_models/gae_model_intermediateGAE_ep15.pth",

  'log_file'		  : "log_untargeted_",
  'sample_dir'		  : "samples/targeted/",

}
